%%stdout%%
func: ()
	if this.l == ()
		Nil
	elsif this.isSingleton ()
		this
	else
		
		private const l, r = this.split (Nil, Nil)
		l.sort ().merge (r.sort ())
	end
end
func: f
	given this.l
		case ()
			Nil
		default
			Cons (f (this.l->0), this.l->1.map f)
	end
end
func: f
	this.reduce (Nil, (func: base, val
		given (f val)
			case true
				Cons (val, base)
			case false
				base
		end
	end))
end
func: n
	given n
		case 0
			this.head ()
		case 1
			this.tail ()
		default
			throw ArgumentError.new "Argument must be 0 or 1", "List.operator->", n
	end
end
%%stderr%%
